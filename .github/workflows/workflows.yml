# KP Project
name: Continous Integration

#Controls when the workflow will run (Trigger)
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, feature/branch ]


  # Allows you to tun this workflow manually from teh Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    
    # Steps respresent sequence of tasks that will be executed as part of job
    steps:
      # Checks-out your reqpo under $GITHUB_WORKSPACE, so your job can access it
      
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # Runs a single command using the runners shell
      - name: Run a one-line scrip
        run: echo What is happening, Imran1

      - name: Run a custom script
        run : |
          ls -al

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: githubactionaks
          resource-group: testenv

      -run: |
        kubectl create namespace githubrg


      
      - name: RUN AZ COMMAND
        if: always()
        run: |
          az account show
          az group list
      - name: Run a Multi-line script
        if: always()
        run: |
          echo Add other actions to build,
          echo test, and deploy your project
      - name: check java version
        run: java -version
      - name: gradle build
        run: gradle build
      - name: Check docker version
        run : |
          docker -v
          docker
          docker images -a
      - name: dockcer build
        run: | 
          docker build . -t immoray22/demo-kotlin2.0
          docker images -a
      - name: login to docker hub
        run: docker login -u ${{ secrets.dockerhubusername }} -p ${{ secrets.dockerhubpassword }}
      
      - name: push docker image
        run: docker push immoray22/demo-kotlin2.0
      

      
